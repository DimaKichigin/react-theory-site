import { Suspense } from "react"

export const ways = [
  {
    title: 'Декларативность',
    description:
      'Декларативный стиль означает, что достаточно один раз описать, как будут выглядеть результаты работы кода — элементы в разных состояниях. Ему не нужно фокусироваться на способах достижения результатов: большую часть задач выполнит библиотека. React.js будет автоматически обновлять элементы в зависимости от условий, главная задача — грамотно описать их. Удобный и понятный подход облегчает написание и отладку кода.',
      
  },
  {
    title: 'Виртуальное DOM-дерево',
    description:
      'React включает в себя механизм, который управляет процессом рендеринга компонентов. Рендеринг — это процесс создания визуального представления компонента, которое отображается в браузере или мобильном приложении. Особенность React в том, что он создает и хранит в кэше виртуальное DOM-дерево — копию DOM, которая изменяется быстрее, чем реальная структура.',
  },
  {
    title: 'Обновление DOM по частям',
    description:
      'Чтобы улучшить быстродействие, React обновляет DOM не полностью. Он хранит в памяти две облегченных копии: актуальную и предыдущую. Когда что-то обновляется, библиотека сравнивает версии между собой и изменяет только ту часть дерева, которая действительно поменялась. Это нужно, чтобы не перезагружать DOM целиком и не замедлять страницу. Подход кажется сложным, но он важен для оптимизации загрузки.',
  },
  {
    title: 'Возможность повторно использовать компоненты',
    description:
      'React основан на компонентах — отдельных элементах веб-интерфейса. Компоненты инкапсулированы, то есть самостоятельны: в каждом из них размещены все необходимые методы и данные. В случае с компонентами React инкапсуляция также означает, что состояние элемента хранится в нем самом, а не в отдельном объекте.',
  },
  {
    title: 'Нисходящий поток данных',
    description:
      'Еще одна особенность потока данных — отсутствие возможности изменять свойства напрямую. Для этого существуют специальные callback-функции. Так называются части исполняемого кода, которые передаются от одного компонента другому в виде параметра функции. Это позволяет поддерживать стабильность: свойства оказываются неизменяемыми после создания, а callback-функция как бы пересоздает их. В результате использования коллбэков поток данных выглядит так: свойства и информация передаются сверху вниз, а события происходят снизу вверх.',
  },
  {
    title: 'Синтаксис JSX',
    description:
      'SX расшифровывается как JavaScript XML. Это расширение языка JavaScript, которое помогает описывать HTML-подобные элементы с помощью кода на React. С помощью синтаксиса на React создают компоненты страницы и гибко управляют ими.',
  },
  {
    title: 'React Hooks',
    description:
      'В React.js есть поддержка хуков — так называются специальные функции-«крючки», которые «цепляются» за состояние элемента или за метод. Изменение состояния или вызов метода «тащит» за собой эти функции, и они автоматически выполняются — это помогает избежать использования классов, облегчает и упрощает написание кода. В React есть встроенные хуки, но разработчик может создавать и собственные — это помогает повторно использовать код и уменьшить его количество.',
  },
  {
    title: 'React Developer Tools',
    description:
      'Так как React.js — очень популярная технология, его создатели разработали бесплатные расширения для браузера с инструментами для проверки и отладки. Фронтендеры часто пользуются консолью и панелью разработчика в браузере, чтобы проверить, как работает их код. React Developer Tools облегчают задачу и расширяют возможности. Например, можно просматривать прямо в браузере компоненты с большим уровнем вложенности и не искать их в коде долгое время.',
  },
  
]

export const differences = {
  fragment: 'Также записываемый как <>...</>, позволяет группировать несколько узлов JSX вместе.',
  profiler: 'Позволяет программно измерить производительность рендеринга дерева React.',
  suspense:
    'Позволяет отображать резервный вариант во время загрузки дочерних компонентов.',
  strictmode:
    'Позволяет проводить дополнительные проверки только на этапе разработки, помогающие обнаруживать ошибки на ранних стадиях.',
  own:
    'Вы также можете определить свои собственные компоненты как функции JavaScript.',
}
